package com.springmvc.thymeleaf.controller;

import com.springmvc.thymeleaf.entity.Employee;
import com.springmvc.thymeleaf.service.EmployeeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping("/employees")
public class EmployeeController {
    private EmployeeService employeeService;

    @Autowired
    public EmployeeController(EmployeeService employeeService) {
        this.employeeService = employeeService;
    }

    @GetMapping("/list")
    public String listEmployees(Model model){

        // get employees from db
        List<Employee> employees = employeeService.findAll();

        //add to the spring model
        model.addAttribute("employees", employees);

        return "employees/list-employees";
    }

    @GetMapping("/showFormForAdd")
    public String showFormForAdd(Model model){
        Employee employee = new Employee();
        model.addAttribute("employee", employee);
        return "employees/employee-form";
    }

    @PostMapping("/save")
    public String saveEmployee(@ModelAttribute("employee") Employee employee){
        //save the employee
        employeeService.save(employee);
        //use a redirect to prevent duplicate submissions
        return "redirect:/employees/list";
    }

    @GetMapping("/showFormForUpdate")
    public String showFormForUpdate(@RequestParam("employeeId") int theId, Model model){
        //get the employee from the service
        Employee theEmployee = employeeService.findById(theId);

        //set employee as a model attribute to pre-populate the form
        model.addAttribute("employee", theEmployee);

        //send over to our html form
        return "employees/employee-form";
    }
    @PutMapping("/update")
    public String updateEmployee(@ModelAttribute("employee") Employee employee){
        //save the employee
        employeeService.save(employee);
        //use a redirect to prevent duplicate submissions
        return "redirect:/employees/list";
    }

    @DeleteMapping("/delete")
    public String delete(@RequestParam("employeeId") int theId){
        //delete the employee
        employeeService.deleteById(theId);
        //redirect to list of employees
        return "redirect:/employees/list";
    }

}
